services:
  app:
    build:
      context: ..
      dockerfile: ./Docker/Dockerfile
    env_file:
      - ../env/database.env
      - ../env/production.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    ports:
      - "8000:8000"

  postgres:
    image: postgres:latest
    env_file:
      - path: ../env/database.env
        required: True
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_NAME}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}"]
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
    
# docker compose --env-file ./env/database.env -f ./Docker/docker-compose.yml build